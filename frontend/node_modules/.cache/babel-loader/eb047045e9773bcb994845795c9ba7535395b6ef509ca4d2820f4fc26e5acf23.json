{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOHANA\\\\Desktop\\\\proyecto_riesgo_psicosocial\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../styles/FileUpload.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [fileName, setFileName] = useState(\"\");\n  const [pdfName, setPdfName] = useState(\"\");\n  const [wordName, setWordName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setFileName(file ? file.name : \"\");\n  };\n  const handleFileUpload = async event => {\n    event.preventDefault();\n    const fileInput = document.getElementById(\"file-upload\");\n    const file = fileInput.files[0];\n    if (!file) {\n      alert(\"Por favor, selecciona un archivo.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:8000/upload/\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        alert(`Error: ${errorData.detail}`);\n      } else {\n        const data = await response.json();\n        alert(data.message);\n      }\n    } catch (error) {\n      alert(\"Ocurrió un error al cargar el archivo.\");\n    }\n  };\n\n  // Genera ambos informes (PDF y Word) al mismo tiempo\n  const handleGenerarAmbosInformes = async () => {\n    setLoading(true);\n    if (!fileName) {\n      alert(\"Primero debes subir un archivo.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      // Generar PDF\n      const responsePDF = await fetch(\"http://localhost:8000/generar_informe/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          filename: fileName,\n          formato: \"pdf\"\n        })\n      });\n      // Generar Word\n      const responseWord = await fetch(\"http://localhost:8000/generar_informe/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          filename: fileName,\n          formato: \"word\"\n        })\n      });\n      if (!responsePDF.ok || !responseWord.ok) {\n        alert(\"Error al generar uno de los informes.\");\n      } else {\n        const dataPDF = await responsePDF.json();\n        const dataWord = await responseWord.json();\n        setPdfName(dataPDF.informe);\n        setWordName(dataWord.informe);\n        alert(\"Informes generados. Ahora puedes descargarlos.\");\n      }\n    } catch (error) {\n      alert(\"Ocurrió un error al generar los informes.\");\n    }\n    setLoading(false);\n  };\n\n  // Descarga el informe seleccionado\n  const handleDescargarInforme = formato => {\n    let informe = formato === \"pdf\" ? pdfName : wordName;\n    if (informe) {\n      window.open(`http://localhost:8000/descargar_informe/${informe}?formato=${formato}`, \"_blank\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFileUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        children: \"Cargar archivo (.xlsx, .csv): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".xlsx, .csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Subir archivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Archivo seleccionado: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerarAmbosInformes,\n      children: \"Generar Informe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/ventana.gif\",\n        alt: \"Cargando...\",\n        style: {\n          width: 80,\n          height: 80\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generando informe, por favor espere...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), pdfName && wordName && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDescargarInforme('pdf'),\n        children: \"Descargar Informe PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDescargarInforme('word'),\n        children: \"Descargar Informe Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `http://localhost:8000/descargar_informe/${pdfName}`,\n        width: \"100%\",\n        height: \"600px\",\n        title: \"Vista previa del informe\",\n        style: {\n          border: \"1px solid #ccc\",\n          marginTop: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"ShWDgj/wpWZu3/b4ks5C1YgnsPw=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","_s","fileName","setFileName","pdfName","setPdfName","wordName","setWordName","loading","setLoading","handleFileChange","event","file","target","files","name","handleFileUpload","preventDefault","fileInput","document","getElementById","alert","formData","FormData","append","response","fetch","method","body","ok","errorData","json","detail","data","message","error","handleGenerarAmbosInformes","responsePDF","headers","JSON","stringify","filename","formato","responseWord","dataPDF","dataWord","informe","handleDescargarInforme","window","open","children","onSubmit","htmlFor","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","onClick","style","display","flexDirection","alignItems","marginTop","src","alt","width","height","title","border","_c","$RefreshReg$"],"sources":["C:/Users/JOHANA/Desktop/proyecto_riesgo_psicosocial/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport '../styles/FileUpload.css';\r\n\r\nconst FileUpload = () => {\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [pdfName, setPdfName] = useState(\"\");\r\n  const [wordName, setWordName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFileName(file ? file.name : \"\");\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    event.preventDefault();\r\n    const fileInput = document.getElementById(\"file-upload\");\r\n    const file = fileInput.files[0];\r\n    if (!file) {\r\n      alert(\"Por favor, selecciona un archivo.\");\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/upload/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(`Error: ${errorData.detail}`);\r\n      } else {\r\n        const data = await response.json();\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Ocurrió un error al cargar el archivo.\");\r\n    }\r\n  };\r\n\r\n  // Genera ambos informes (PDF y Word) al mismo tiempo\r\n  const handleGenerarAmbosInformes = async () => {\r\n    setLoading(true);\r\n    if (!fileName) {\r\n      alert(\"Primero debes subir un archivo.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      // Generar PDF\r\n      const responsePDF = await fetch(\"http://localhost:8000/generar_informe/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ filename: fileName, formato: \"pdf\" }),\r\n      });\r\n      // Generar Word\r\n      const responseWord = await fetch(\"http://localhost:8000/generar_informe/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ filename: fileName, formato: \"word\" }),\r\n      });\r\n\r\n      if (!responsePDF.ok || !responseWord.ok) {\r\n        alert(\"Error al generar uno de los informes.\");\r\n      } else {\r\n        const dataPDF = await responsePDF.json();\r\n        const dataWord = await responseWord.json();\r\n        setPdfName(dataPDF.informe);\r\n        setWordName(dataWord.informe);\r\n        alert(\"Informes generados. Ahora puedes descargarlos.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Ocurrió un error al generar los informes.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Descarga el informe seleccionado\r\n  const handleDescargarInforme = (formato) => {\r\n    let informe = formato === \"pdf\" ? pdfName : wordName;\r\n    if (informe) {\r\n      window.open(`http://localhost:8000/descargar_informe/${informe}?formato=${formato}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleFileUpload}>\r\n        <label htmlFor=\"file-upload\">Cargar archivo (.xlsx, .csv): </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"file-upload\"\r\n          accept=\".xlsx, .csv\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <button type=\"submit\">Subir archivo</button>\r\n      </form>\r\n\r\n      {fileName && <p>Archivo seleccionado: {fileName}</p>}\r\n\r\n      {/* Un solo botón para generar ambos informes */}\r\n      <button onClick={handleGenerarAmbosInformes}>Generar Informe</button>\r\n\r\n      {loading && (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: 30 }}>\r\n          <img src=\"/ventana.gif\" alt=\"Cargando...\" style={{ width: 80, height: 80 }} />\r\n          <p>Generando informe, por favor espere...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Botones para descargar PDF o Word solo si ambos existen */}\r\n      {pdfName && wordName && (\r\n        <>\r\n          <button onClick={() => handleDescargarInforme('pdf')}>\r\n            Descargar Informe PDF\r\n          </button>\r\n          <button onClick={() => handleDescargarInforme('word')}>\r\n            Descargar Informe Word\r\n          </button>\r\n          {/* Vista previa solo del PDF */}\r\n          <iframe\r\n            src={`http://localhost:8000/descargar_informe/${pdfName}`}\r\n            width=\"100%\"\r\n            height=\"600px\"\r\n            title=\"Vista previa del informe\"\r\n            style={{ border: \"1px solid #ccc\", marginTop: \"20px\" }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}